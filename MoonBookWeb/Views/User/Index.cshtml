@{
    var user = ViewData["AuthUser"] as User;
}

<section id="UserPage">
    <div id="UserAvatar">
        @if(!String.IsNullOrEmpty(user?.PhotoName))
        {
            <img id="UserPhoto" src="/img/@user.PhotoName"/>
        }
        else
        {
            <img id="UserPhoto" src="/icons/android_contacts_FILL0_wght400_GRAD0_opsz48.png">
        }
    </div>
    <div id="UserInformations">
    <div id="UserName">
      <h1 id="UName">@user?.Name @user?.Surname</h1>
    </div>
       <div id="SendPost">
           <textarea id="Text" aria-disabled="false" spellcheck="true" autocomplete="on" autocorrect="on" autocapitalize="on" contenteditable="true" cols="4" wrap="soft"></textarea>
           <input type="file" id="ImagePost" accept="image/*" multiple>
           <label for="ImagePost" style="margin-left: 80%;">
             <img src="/icons/image_FILL0_wght400_GRAD0_opsz48.png" style="width: 30px; height: 30px;"/>
           </label>
           <button id="Post">
               <img src="/icons/send_FILL0_wght400_GRAD0_opsz48.png"/>
           </button>
           <button type="button" id="Title">
                <img src="/icons/title_FILL0_wght400_GRAD0_opsz48.png"/>
           </button>
       </div>
       <post id="post"></post>
       @*<div>
       @if(posts?.Count() != 0){
          @foreach (var post in posts){
             <div id="PostUser">
                <div id="PostInfo" >
                    @if(String.IsNullOrEmpty(user?.PhotoName))
                    { 
                        <img src="/icons/android_contacts_FILL0_wght400_GRAD0_opsz48.png" style="border: 2px double black;  margin: 1%;  border-radius: 150px; width: 35px; height: 35px;"> 
                    } else
                    { 
                        <img src="/img/@user.PhotoName" style="border: 2px double black; vertical-align:top; margin: 1%; border-radius: 150px; width: 35px; height: 35px;"> 
                    }
                    <p id="PostUserName">
                        <b>@user?.Name @user?.Surname</b><br/>
                            <i>@post.Date</i></p>
                </div>
                <div>
                    <p id="PostTitle" ><b>@post.Title</b></p>
                    <img id="PostImg" src="/img_post/@post.Image"/><p>@post.Text</p>
                </div>
                <div id="PostComment">
                     <button>
                         <img src="/icons/send_FILL0_wght400_GRAD0_opsz48.png"/>
                     </button>
                     <textarea aria-disabled="false" spellcheck="true" autocomplete="on" autocorrect="on" autocapitalize="on" contenteditable="true" name="BlokMessege" cols="4" wrap="soft"></textarea>
                </div>
                <div id="PostReactions">
                    <num id="@post.Id.ToString()_DisLike">@post.Dislike</num>
                    <button id="@post.Id.ToString()_Sad">
                        <img src="/icons/mood_bad_FILL0_wght400_GRAD0_opsz48.png"/>
                    </button>
                        <num id="@post.Id.ToString()_Like" >@post.Like</num>
                    <button id="@post.Id.ToString()_Smail">
                        <img src="/icons/mood_FILL0_wght400_GRAD0_opsz48.png"/>
                    </button>
                </div>
             </div>
             <script>
                 var sad = document.getElementById("@post.Id.ToString()_Sad");
                 var smaile = document.getElementById("@post.Id.ToString()_Smail");
                 const @post.Date.ToString("TyyyyMMddHHmmssfffffff")like = document.getElementById("@post.Id.ToString()_Like");
                 const @post.Date.ToString("TyyyyMMddHHmmssfffffff")dislike = document.getElementById("@post.Id.ToString()_DisLike");
                 smaile.addEventListener("click",() => 
                 {
                     const formData = new FormData();
	                 formData.append("Reaction", 1);
	                 formData.append("IdPost", "@post.Id");
             
                     fetch("/api/post", {
                         method: "PUT",
                         body: formData
                     }).then(r => r.json()).then(j => {
		                   if (j.status == "Error") {
		  	                  alert(j.message)
		                   } else {
                               @post.Date.ToString("TyyyyMMddHHmmssfffffff")like.textContent = j.reactLike;
                               @post.Date.ToString("TyyyyMMddHHmmssfffffff")dislike.textContent = j.reactDislike;
                           }
                     })
                 })
                 sad.addEventListener("click", () => 
                 {
                    const formData = new FormData();
	                 formData.append("Reaction", 2);
	                 formData.append("IdPost", "@post.Id");
                     fetch("/api/post", {
                         method: "PUT",
                         body: formData
                     }).then(r => r.json()).then(j => {
		                   if (j.status == "Error") {
		  	                  alert(j.message)
		                   } else {
                               @post.Date.ToString("TyyyyMMddHHmmssfffffff")dislike.textContent = j.reactDislike;
                               @post.Date.ToString("TyyyyMMddHHmmssfffffff")like.textContent = j.reactLike;
                           }
                     })
                 })
             </script>
          }
       }</div>*@
    </div>
 </section>
 <script src="/js/post.js"></script>
